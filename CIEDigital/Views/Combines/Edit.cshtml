@model Combine

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <h4>Combine</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Arms, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Arms, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Arms, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bench, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bench, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Bench, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Broad, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Broad, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Broad, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.College, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.College, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.College, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FourtyYardDash, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.FourtyYardDash, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FourtyYardDash, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hands, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hands, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Hands, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HeightFeet, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.HeightFeet, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.HeightFeet, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HeightInches, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.HeightInches, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.HeightInches, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HeightInchesTotal, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.HeightInchesTotal, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.HeightInchesTotal, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NFLGrade, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.NFLGrade, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.NFLGrade, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pick, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pick, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Pick, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PickRound, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.PickRound, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.PickRound, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PickTotal, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.PickTotal, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.PickTotal, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionID, "PositionID", new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.DropDownList("PositionID", null, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.PositionID, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Round, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Round, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Round, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TenYardDash, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenYardDash, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TenYardDash, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThreeCone, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThreeCone, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.ThreeCone, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TwentyYardDash, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TwentyYardDash, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TwentyYardDash, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TwentyYardShuttle, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TwentyYardShuttle, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TwentyYardShuttle, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Vertical, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Vertical, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Vertical, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WeightPounds, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.WeightPounds, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.WeightPounds, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Wonderlic, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Wonderlic, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Wonderlic, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Year, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default"/>
        </div>
    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>